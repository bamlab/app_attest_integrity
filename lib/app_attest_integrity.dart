import 'package:app_attest_integrity/app_attest_integrity_platform_interface.dart';
import 'package:app_attest_integrity/src/model/generate_assertion_response.dart';

/// This class is used to assess an app integrity.
/// Uses App attest on iOS and app Integrity on Android.
class AppAttestIntegrity {
  /// This class is used to assess an app integrity.
  /// Uses App attest on iOS and app Integrity on Android.
  const AppAttestIntegrity();

  /// Get the platform version.
  ///
  /// This a hello world method, will be removed later.
  Future<String?> getPlatformVersion() {
    return AppAttestIntegrityPlatform.instance.getPlatformVersion();
  }

  /// [Android only]<br/>
  /// Warm up the integrity API server.
  ///
  /// Use this method on Android when you plan to use the `verify` method
  /// in a near future.
  /// See [this android official doc](https://developer.android.com/google/play/integrity/standard) for more details.
  ///
  /// Throws if the warmup fails, or if the method had already been called.
  ///
  /// [cloudProjectNumber] is the cloud project number of your app.
  /// It can be found in the Google Play Console.
  ///
  /// This method will do nothing on iOS.
  Future<void> androidPrepareIntegrityServer(int cloudProjectNumber) {
    return AppAttestIntegrityPlatform.instance.androidPrepareIntegrityServer(
      cloudProjectNumber,
    );
  }

  /// [iOS only]<br/>
  /// Creates a key pair and verifies it using the [challenge],
  /// which creates an attestation.
  /// Returns the corresponding attestation and keyID to be sent to the server.
  ///
  /// The attestation can be seen as a public key for later integrity checks.
  /// See [this iOS official doc](https://developer.apple.com/documentation/devicecheck/establishing-your-app-s-integrity) for more details
  /// and further implementation instructions.
  ///
  ///
  /// [challenge] is a nonce generated by the server,
  /// used to avoid replay attacks.<br/>
  /// The challenge should be at least 16 bytes in length to ensure sufficient
  /// entropy to ensure guessing them is infeasible.
  ///
  /// Returns null only on Android.
  Future<GenerateAssertionResponse?> iOSgenerateAttestation(String challenge) {
    return AppAttestIntegrityPlatform.instance.iOSgenerateAttestation(
      challenge,
    );
  }
}
